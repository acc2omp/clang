//===--- OpenACCKinds.def - OpenACC directives and clauses list ---*- C++ -*-===//
//
//                     The LLVM Cacciler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
/// \file
/// \brief This file defines the list of supported OpenACC directives and
/// clauses.
///
//===----------------------------------------------------------------------===//

#ifndef OPENACC_DIRECTIVE
#  define OPENACC_DIRECTIVE(Name)
#endif
#ifndef OPENACC_DIRECTIVE_EXT
#define OPENACC_DIRECTIVE_EXT(Name, Str)
#endif
#ifndef OPENACC_CLAUSE
#  define OPENACC_CLAUSE(Name, Class)
#endif
#ifndef OPENACC_PARALLEL_CLAUSE
#  define OPENACC_PARALLEL_CLAUSE(Name)
#endif
#ifndef OPENACC_SIMD_CLAUSE
#  define OPENACC_SIMD_CLAUSE(Name)
#endif
#ifndef OPENACC_FOR_CLAUSE
#  define OPENACC_FOR_CLAUSE(Name)
#endif
#ifndef OPENACC_FOR_SIMD_CLAUSE
#  define OPENACC_FOR_SIMD_CLAUSE(Name)
#endif
#ifndef OPENACC_SECTIONS_CLAUSE
#  define OPENACC_SECTIONS_CLAUSE(Name)
#endif
#ifndef OPENACC_SINGLE_CLAUSE
#  define OPENACC_SINGLE_CLAUSE(Name)
#endif
#ifndef OPENACC_PARALLEL_FOR_CLAUSE
#  define OPENACC_PARALLEL_FOR_CLAUSE(Name)
#endif
#ifndef OPENACC_PARALLEL_FOR_SIMD_CLAUSE
#  define OPENACC_PARALLEL_FOR_SIMD_CLAUSE(Name)
#endif
#ifndef OPENACC_PARALLEL_SECTIONS_CLAUSE
#  define OPENACC_PARALLEL_SECTIONS_CLAUSE(Name)
#endif
#ifndef OPENACC_TASK_CLAUSE
#  define OPENACC_TASK_CLAUSE(Name)
#endif
#ifndef OPENACC_ATOMIC_CLAUSE
#  define OPENACC_ATOMIC_CLAUSE(Name)
#endif
#ifndef OPENACC_TARGET_CLAUSE
#  define OPENACC_TARGET_CLAUSE(Name)
#endif
#ifndef OPENACC_TARGET_DATA_CLAUSE
#  define OPENACC_TARGET_DATA_CLAUSE(Name)
#endif
#ifndef OPENACC_TARGET_ENTER_DATA_CLAUSE
#define OPENACC_TARGET_ENTER_DATA_CLAUSE(Name)
#endif
#ifndef OPENACC_TARGET_EXIT_DATA_CLAUSE
#define OPENACC_TARGET_EXIT_DATA_CLAUSE(Name)
#endif
#ifndef OPENACC_TARGET_PARALLEL_CLAUSE
#  define OPENACC_TARGET_PARALLEL_CLAUSE(Name)
#endif
#ifndef OPENACC_TARGET_PARALLEL_FOR_CLAUSE
#  define OPENACC_TARGET_PARALLEL_FOR_CLAUSE(Name)
#endif
#ifndef OPENACC_TARGET_UPDATE_CLAUSE
#  define OPENACC_TARGET_UPDATE_CLAUSE(Name)
#endif
#ifndef OPENACC_TEAMS_CLAUSE
#  define OPENACC_TEAMS_CLAUSE(Name)
#endif
#ifndef OPENACC_CANCEL_CLAUSE
#  define OPENACC_CANCEL_CLAUSE(Name)
#endif
#ifndef OPENACC_ORDERED_CLAUSE
#  define OPENACC_ORDERED_CLAUSE(Name)
#endif
#ifndef OPENACC_TASKLOOP_CLAUSE
#  define OPENACC_TASKLOOP_CLAUSE(Name)
#endif
#ifndef OPENACC_TASKLOOP_SIMD_CLAUSE
#  define OPENACC_TASKLOOP_SIMD_CLAUSE(Name)
#endif
#ifndef OPENACC_CRITICAL_CLAUSE
#  define OPENACC_CRITICAL_CLAUSE(Name)
#endif
#ifndef OPENACC_DISTRIBUTE_CLAUSE
#define OPENACC_DISTRIBUTE_CLAUSE(Name)
#endif
#ifndef OPENACC_DEFAULT_KIND
#  define OPENACC_DEFAULT_KIND(Name)
#endif
#ifndef OPENACC_PROC_BIND_KIND
#  define OPENACC_PROC_BIND_KIND(Name)
#endif
#ifndef OPENACC_SCHEDULE_KIND
#define OPENACC_SCHEDULE_KIND(Name)
#endif
#ifndef OPENACC_SCHEDULE_MODIFIER
#define OPENACC_SCHEDULE_MODIFIER(Name)
#endif
#ifndef OPENACC_DEPEND_KIND
#define OPENACC_DEPEND_KIND(Name)
#endif
#ifndef OPENACC_LINEAR_KIND
#define OPENACC_LINEAR_KIND(Name)
#endif
#ifndef OPENACC_MAP_KIND
#define OPENACC_MAP_KIND(Name)
#endif
#ifndef OPENACC_DIST_SCHEDULE_KIND
#define OPENACC_DIST_SCHEDULE_KIND(Name)
#endif
#ifndef OPENACC_DEFAULTMAP_KIND
#define OPENACC_DEFAULTMAP_KIND(Name)
#endif
#ifndef OPENACC_DEFAULTMAP_MODIFIER
#define OPENACC_DEFAULTMAP_MODIFIER(Name)
#endif
#ifndef OPENACC_DISTRIBUTE_PARALLEL_FOR_CLAUSE
#define OPENACC_DISTRIBUTE_PARALLEL_FOR_CLAUSE(Name)
#endif
#ifndef OPENACC_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE
#define OPENACC_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(Name)
#endif
#ifndef OPENACC_DISTRIBUTE_SIMD_CLAUSE
#define OPENACC_DISTRIBUTE_SIMD_CLAUSE(Name)
#endif
#ifndef OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE
#define OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(Name)
#endif
#ifndef OPENACC_TARGET_SIMD_CLAUSE
#define OPENACC_TARGET_SIMD_CLAUSE(Name)
#endif
#ifndef OPENACC_TEAMS_DISTRIBUTE_CLAUSE
#define OPENACC_TEAMS_DISTRIBUTE_CLAUSE(Name)
#endif
#ifndef OPENACC_TEAMS_DISTRIBUTE_SIMD_CLAUSE
#define OPENACC_TEAMS_DISTRIBUTE_SIMD_CLAUSE(Name)
#endif
#ifndef OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE
#define OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(Name)
#endif
#ifndef OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE
#define OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(Name)
#endif
#ifndef OPENACC_TARGET_TEAMS_CLAUSE
#define OPENACC_TARGET_TEAMS_CLAUSE(Name)
#endif
#ifndef OPENACC_TARGET_TEAMS_DISTRIBUTE_CLAUSE
#define OPENACC_TARGET_TEAMS_DISTRIBUTE_CLAUSE(Name)
#endif
#ifndef OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE
#define OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(Name)
#endif
#ifndef OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE
#define OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(Name)
#endif
#ifndef OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE
#define OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE(Name)
#endif
#ifndef OPENACC_TASKGROUP_CLAUSE
#define OPENACC_TASKGROUP_CLAUSE(Name)
#endif

// OpenACC directives.
OPENACC_DIRECTIVE(threadprivate)
OPENACC_DIRECTIVE(parallel)
OPENACC_DIRECTIVE(task)
OPENACC_DIRECTIVE(simd)
OPENACC_DIRECTIVE(for)
OPENACC_DIRECTIVE(sections)
OPENACC_DIRECTIVE(section)
OPENACC_DIRECTIVE(single)
OPENACC_DIRECTIVE(master)
OPENACC_DIRECTIVE(critical)
OPENACC_DIRECTIVE(taskyield)
OPENACC_DIRECTIVE(barrier)
OPENACC_DIRECTIVE(taskwait)
OPENACC_DIRECTIVE(taskgroup)
OPENACC_DIRECTIVE(flush)
OPENACC_DIRECTIVE(ordered)
OPENACC_DIRECTIVE(atomic)
OPENACC_DIRECTIVE(target)
OPENACC_DIRECTIVE(teams)
OPENACC_DIRECTIVE(cancel)
OPENACC_DIRECTIVE_EXT(target_data, "target data")
OPENACC_DIRECTIVE_EXT(target_enter_data, "target enter data")
OPENACC_DIRECTIVE_EXT(target_exit_data, "target exit data")
OPENACC_DIRECTIVE_EXT(target_parallel, "target parallel")
OPENACC_DIRECTIVE_EXT(target_parallel_for, "target parallel for")
OPENACC_DIRECTIVE_EXT(target_update, "target update")
OPENACC_DIRECTIVE_EXT(parallel_for, "parallel for")
OPENACC_DIRECTIVE_EXT(parallel_for_simd, "parallel for simd")
OPENACC_DIRECTIVE_EXT(parallel_sections, "parallel sections")
OPENACC_DIRECTIVE_EXT(for_simd, "for simd")
OPENACC_DIRECTIVE_EXT(cancellation_point, "cancellation point")
OPENACC_DIRECTIVE_EXT(declare_reduction, "declare reduction")
OPENACC_DIRECTIVE_EXT(declare_simd, "declare simd")
OPENACC_DIRECTIVE(taskloop)
OPENACC_DIRECTIVE_EXT(taskloop_simd, "taskloop simd")
OPENACC_DIRECTIVE(distribute)
OPENACC_DIRECTIVE_EXT(declare_target, "declare target")
OPENACC_DIRECTIVE_EXT(end_declare_target, "end declare target")
OPENACC_DIRECTIVE_EXT(distribute_parallel_for, "distribute parallel for")
OPENACC_DIRECTIVE_EXT(distribute_parallel_for_simd, "distribute parallel for simd")
OPENACC_DIRECTIVE_EXT(distribute_simd, "distribute simd")
OPENACC_DIRECTIVE_EXT(target_parallel_for_simd, "target parallel for simd")
OPENACC_DIRECTIVE_EXT(target_simd, "target simd")
OPENACC_DIRECTIVE_EXT(teams_distribute, "teams distribute")
OPENACC_DIRECTIVE_EXT(teams_distribute_simd, "teams distribute simd")
OPENACC_DIRECTIVE_EXT(teams_distribute_parallel_for_simd, "teams distribute parallel for simd")
OPENACC_DIRECTIVE_EXT(teams_distribute_parallel_for, "teams distribute parallel for")
OPENACC_DIRECTIVE_EXT(target_teams, "target teams")
OPENACC_DIRECTIVE_EXT(target_teams_distribute, "target teams distribute")
OPENACC_DIRECTIVE_EXT(target_teams_distribute_parallel_for, "target teams distribute parallel for")
OPENACC_DIRECTIVE_EXT(target_teams_distribute_parallel_for_simd, "target teams distribute parallel for simd")
OPENACC_DIRECTIVE_EXT(target_teams_distribute_simd, "target teams distribute simd")

// OpenACC clauses.
OPENACC_CLAUSE(if, ACCIfClause)
OPENACC_CLAUSE(final, ACCFinalClause)
OPENACC_CLAUSE(num_threads, ACCNumThreadsClause)
OPENACC_CLAUSE(safelen, ACCSafelenClause)
OPENACC_CLAUSE(simdlen, ACCSimdlenClause)
OPENACC_CLAUSE(collapse, ACCCollapseClause)
OPENACC_CLAUSE(default, ACCDefaultClause)
OPENACC_CLAUSE(private, ACCPrivateClause)
OPENACC_CLAUSE(firstprivate, ACCFirstprivateClause)
OPENACC_CLAUSE(lastprivate, ACCLastprivateClause)
OPENACC_CLAUSE(shared,  ACCSharedClause)
OPENACC_CLAUSE(reduction,  ACCReductionClause)
OPENACC_CLAUSE(linear,  ACCLinearClause)
OPENACC_CLAUSE(aligned, ACCAlignedClause)
OPENACC_CLAUSE(copyin,  ACCCopyinClause)
OPENACC_CLAUSE(copyprivate,  ACCCopyprivateClause)
OPENACC_CLAUSE(proc_bind, ACCProcBindClause)
OPENACC_CLAUSE(schedule, ACCScheduleClause)
OPENACC_CLAUSE(ordered, ACCOrderedClause)
OPENACC_CLAUSE(nowait, ACCNowaitClause)
OPENACC_CLAUSE(untied, ACCUntiedClause)
OPENACC_CLAUSE(mergeable, ACCMergeableClause)
OPENACC_CLAUSE(flush, ACCFlushClause)
OPENACC_CLAUSE(read, ACCReadClause)
OPENACC_CLAUSE(write, ACCWriteClause)
OPENACC_CLAUSE(update, ACCUpdateClause)
OPENACC_CLAUSE(capture, ACCCaptureClause)
OPENACC_CLAUSE(seq_cst, ACCSeqCstClause)
OPENACC_CLAUSE(depend, ACCDependClause)
OPENACC_CLAUSE(device, ACCDeviceClause)
OPENACC_CLAUSE(threads, ACCThreadsClause)
OPENACC_CLAUSE(simd, ACCSIMDClause)
OPENACC_CLAUSE(map, ACCMapClause)
OPENACC_CLAUSE(num_teams, ACCNumTeamsClause)
OPENACC_CLAUSE(thread_limit, ACCThreadLimitClause)
OPENACC_CLAUSE(priority, ACCPriorityClause)
OPENACC_CLAUSE(grainsize, ACCGrainsizeClause)
OPENACC_CLAUSE(nogroup, ACCNogroupClause)
OPENACC_CLAUSE(num_tasks, ACCNumTasksClause)
OPENACC_CLAUSE(hint, ACCHintClause)
OPENACC_CLAUSE(dist_schedule, ACCDistScheduleClause)
OPENACC_CLAUSE(defaultmap, ACCDefaultmapClause)
OPENACC_CLAUSE(to, ACCToClause)
OPENACC_CLAUSE(from, ACCFromClause)
OPENACC_CLAUSE(use_device_ptr, ACCUseDevicePtrClause)
OPENACC_CLAUSE(is_device_ptr, ACCIsDevicePtrClause)
OPENACC_CLAUSE(task_reduction,  ACCTaskReductionClause)
OPENACC_CLAUSE(in_reduction,  ACCInReductionClause)

// Clauses allowed for OpenACC directive 'parallel'.
OPENACC_PARALLEL_CLAUSE(if)
OPENACC_PARALLEL_CLAUSE(num_threads)
OPENACC_PARALLEL_CLAUSE(default)
OPENACC_PARALLEL_CLAUSE(proc_bind)
OPENACC_PARALLEL_CLAUSE(private)
OPENACC_PARALLEL_CLAUSE(firstprivate)
OPENACC_PARALLEL_CLAUSE(shared)
OPENACC_PARALLEL_CLAUSE(reduction)
OPENACC_PARALLEL_CLAUSE(copyin)

// Clauses allowed for directive 'acc simd'.
OPENACC_SIMD_CLAUSE(private)
OPENACC_SIMD_CLAUSE(lastprivate)
OPENACC_SIMD_CLAUSE(linear)
OPENACC_SIMD_CLAUSE(aligned)
OPENACC_SIMD_CLAUSE(safelen)
OPENACC_SIMD_CLAUSE(simdlen)
OPENACC_SIMD_CLAUSE(collapse)
OPENACC_SIMD_CLAUSE(reduction)

// Clauses allowed for directive 'acc for'.
OPENACC_FOR_CLAUSE(private)
OPENACC_FOR_CLAUSE(lastprivate)
OPENACC_FOR_CLAUSE(firstprivate)
OPENACC_FOR_CLAUSE(reduction)
OPENACC_FOR_CLAUSE(collapse)
OPENACC_FOR_CLAUSE(schedule)
OPENACC_FOR_CLAUSE(ordered)
OPENACC_FOR_CLAUSE(nowait)
OPENACC_FOR_CLAUSE(linear)

// Clauses allowed for directive 'acc for simd'.
OPENACC_FOR_SIMD_CLAUSE(private)
OPENACC_FOR_SIMD_CLAUSE(firstprivate)
OPENACC_FOR_SIMD_CLAUSE(lastprivate)
OPENACC_FOR_SIMD_CLAUSE(reduction)
OPENACC_FOR_SIMD_CLAUSE(schedule)
OPENACC_FOR_SIMD_CLAUSE(collapse)
OPENACC_FOR_SIMD_CLAUSE(nowait)
OPENACC_FOR_SIMD_CLAUSE(safelen)
OPENACC_FOR_SIMD_CLAUSE(simdlen)
OPENACC_FOR_SIMD_CLAUSE(linear)
OPENACC_FOR_SIMD_CLAUSE(aligned)
OPENACC_FOR_SIMD_CLAUSE(ordered)

// Clauses allowed for OpenACC directive 'acc sections'.
OPENACC_SECTIONS_CLAUSE(private)
OPENACC_SECTIONS_CLAUSE(lastprivate)
OPENACC_SECTIONS_CLAUSE(firstprivate)
OPENACC_SECTIONS_CLAUSE(reduction)
OPENACC_SECTIONS_CLAUSE(nowait)

// Clauses allowed for directive 'acc single'.
OPENACC_SINGLE_CLAUSE(private)
OPENACC_SINGLE_CLAUSE(firstprivate)
OPENACC_SINGLE_CLAUSE(copyprivate)
OPENACC_SINGLE_CLAUSE(nowait)

// Clauses allowed for OpenACC directive 'cancel'.
OPENACC_CANCEL_CLAUSE(if)

// Static attributes for 'default' clause.
OPENACC_DEFAULT_KIND(none)
OPENACC_DEFAULT_KIND(shared)

// Static attributes for 'proc_bind' clause.
OPENACC_PROC_BIND_KIND(master)
OPENACC_PROC_BIND_KIND(close)
OPENACC_PROC_BIND_KIND(spread)

// Static attributes for 'schedule' clause.
OPENACC_SCHEDULE_KIND(static)
OPENACC_SCHEDULE_KIND(dynamic)
OPENACC_SCHEDULE_KIND(guided)
OPENACC_SCHEDULE_KIND(auto)
OPENACC_SCHEDULE_KIND(runtime)

// Modifiers for 'schedule' clause.
OPENACC_SCHEDULE_MODIFIER(monotonic)
OPENACC_SCHEDULE_MODIFIER(nonmonotonic)
OPENACC_SCHEDULE_MODIFIER(simd)

// Static attributes for 'defaultmap' clause.
OPENACC_DEFAULTMAP_KIND(scalar)

// Modifiers for 'defaultmap' clause.
OPENACC_DEFAULTMAP_MODIFIER(tofrom)

// Static attributes for 'depend' clause.
OPENACC_DEPEND_KIND(in)
OPENACC_DEPEND_KIND(out)
OPENACC_DEPEND_KIND(inout)
OPENACC_DEPEND_KIND(source)
OPENACC_DEPEND_KIND(sink)

// Modifiers for 'linear' clause.
OPENACC_LINEAR_KIND(val)
OPENACC_LINEAR_KIND(ref)
OPENACC_LINEAR_KIND(uval)

// Clauses allowed for OpenACC directive 'parallel for'.
OPENACC_PARALLEL_FOR_CLAUSE(if)
OPENACC_PARALLEL_FOR_CLAUSE(num_threads)
OPENACC_PARALLEL_FOR_CLAUSE(default)
OPENACC_PARALLEL_FOR_CLAUSE(proc_bind)
OPENACC_PARALLEL_FOR_CLAUSE(private)
OPENACC_PARALLEL_FOR_CLAUSE(firstprivate)
OPENACC_PARALLEL_FOR_CLAUSE(shared)
OPENACC_PARALLEL_FOR_CLAUSE(reduction)
OPENACC_PARALLEL_FOR_CLAUSE(copyin)
OPENACC_PARALLEL_FOR_CLAUSE(lastprivate)
OPENACC_PARALLEL_FOR_CLAUSE(collapse)
OPENACC_PARALLEL_FOR_CLAUSE(schedule)
OPENACC_PARALLEL_FOR_CLAUSE(ordered)
OPENACC_PARALLEL_FOR_CLAUSE(linear)

// Clauses allowed for OpenACC directive 'parallel for simd'.
OPENACC_PARALLEL_FOR_SIMD_CLAUSE(if)
OPENACC_PARALLEL_FOR_SIMD_CLAUSE(num_threads)
OPENACC_PARALLEL_FOR_SIMD_CLAUSE(default)
OPENACC_PARALLEL_FOR_SIMD_CLAUSE(proc_bind)
OPENACC_PARALLEL_FOR_SIMD_CLAUSE(private)
OPENACC_PARALLEL_FOR_SIMD_CLAUSE(firstprivate)
OPENACC_PARALLEL_FOR_SIMD_CLAUSE(shared)
OPENACC_PARALLEL_FOR_SIMD_CLAUSE(reduction)
OPENACC_PARALLEL_FOR_SIMD_CLAUSE(copyin)
OPENACC_PARALLEL_FOR_SIMD_CLAUSE(lastprivate)
OPENACC_PARALLEL_FOR_SIMD_CLAUSE(collapse)
OPENACC_PARALLEL_FOR_SIMD_CLAUSE(schedule)
OPENACC_PARALLEL_FOR_SIMD_CLAUSE(safelen)
OPENACC_PARALLEL_FOR_SIMD_CLAUSE(simdlen)
OPENACC_PARALLEL_FOR_SIMD_CLAUSE(linear)
OPENACC_PARALLEL_FOR_SIMD_CLAUSE(aligned)
OPENACC_PARALLEL_FOR_SIMD_CLAUSE(ordered)

// Clauses allowed for OpenACC directive 'parallel sections'.
OPENACC_PARALLEL_SECTIONS_CLAUSE(if)
OPENACC_PARALLEL_SECTIONS_CLAUSE(num_threads)
OPENACC_PARALLEL_SECTIONS_CLAUSE(default)
OPENACC_PARALLEL_SECTIONS_CLAUSE(proc_bind)
OPENACC_PARALLEL_SECTIONS_CLAUSE(private)
OPENACC_PARALLEL_SECTIONS_CLAUSE(firstprivate)
OPENACC_PARALLEL_SECTIONS_CLAUSE(shared)
OPENACC_PARALLEL_SECTIONS_CLAUSE(reduction)
OPENACC_PARALLEL_SECTIONS_CLAUSE(copyin)
OPENACC_PARALLEL_SECTIONS_CLAUSE(lastprivate)

// Clauses allowed for OpenACC directive 'task'.
OPENACC_TASK_CLAUSE(if)
OPENACC_TASK_CLAUSE(final)
OPENACC_TASK_CLAUSE(default)
OPENACC_TASK_CLAUSE(private)
OPENACC_TASK_CLAUSE(firstprivate)
OPENACC_TASK_CLAUSE(shared)
OPENACC_TASK_CLAUSE(untied)
OPENACC_TASK_CLAUSE(mergeable)
OPENACC_TASK_CLAUSE(depend)
OPENACC_TASK_CLAUSE(priority)
OPENACC_TASK_CLAUSE(in_reduction)

// Clauses allowed for OpenACC directive 'atomic'.
OPENACC_ATOMIC_CLAUSE(read)
OPENACC_ATOMIC_CLAUSE(write)
OPENACC_ATOMIC_CLAUSE(update)
OPENACC_ATOMIC_CLAUSE(capture)
OPENACC_ATOMIC_CLAUSE(seq_cst)

// Clauses allowed for OpenACC directive 'target'.
OPENACC_TARGET_CLAUSE(if)
OPENACC_TARGET_CLAUSE(device)
OPENACC_TARGET_CLAUSE(map)
OPENACC_TARGET_CLAUSE(private)
OPENACC_TARGET_CLAUSE(nowait)
OPENACC_TARGET_CLAUSE(depend)
OPENACC_TARGET_CLAUSE(defaultmap)
OPENACC_TARGET_CLAUSE(firstprivate)
OPENACC_TARGET_CLAUSE(is_device_ptr)
OPENACC_TARGET_CLAUSE(reduction)

// Clauses allowed for OpenACC directive 'target data'.
OPENACC_TARGET_DATA_CLAUSE(if)
OPENACC_TARGET_DATA_CLAUSE(device)
OPENACC_TARGET_DATA_CLAUSE(map)
OPENACC_TARGET_DATA_CLAUSE(use_device_ptr)

// Clauses allowed for OpenACC directive 'target enter data'.
OPENACC_TARGET_ENTER_DATA_CLAUSE(if)
OPENACC_TARGET_ENTER_DATA_CLAUSE(device)
OPENACC_TARGET_ENTER_DATA_CLAUSE(map)
OPENACC_TARGET_ENTER_DATA_CLAUSE(nowait)
OPENACC_TARGET_ENTER_DATA_CLAUSE(depend)

// Clauses allowed for OpenACC directive 'target exit data'.
OPENACC_TARGET_EXIT_DATA_CLAUSE(if)
OPENACC_TARGET_EXIT_DATA_CLAUSE(device)
OPENACC_TARGET_EXIT_DATA_CLAUSE(map)
OPENACC_TARGET_EXIT_DATA_CLAUSE(nowait)
OPENACC_TARGET_EXIT_DATA_CLAUSE(depend)

// Clauses allowed for OpenACC directive 'target parallel'.
OPENACC_TARGET_PARALLEL_CLAUSE(if)
OPENACC_TARGET_PARALLEL_CLAUSE(device)
OPENACC_TARGET_PARALLEL_CLAUSE(map)
OPENACC_TARGET_PARALLEL_CLAUSE(private)
OPENACC_TARGET_PARALLEL_CLAUSE(firstprivate)
OPENACC_TARGET_PARALLEL_CLAUSE(nowait)
OPENACC_TARGET_PARALLEL_CLAUSE(depend)
OPENACC_TARGET_PARALLEL_CLAUSE(defaultmap)
OPENACC_TARGET_PARALLEL_CLAUSE(num_threads)
OPENACC_TARGET_PARALLEL_CLAUSE(default)
OPENACC_TARGET_PARALLEL_CLAUSE(proc_bind)
OPENACC_TARGET_PARALLEL_CLAUSE(shared)
OPENACC_TARGET_PARALLEL_CLAUSE(reduction)
OPENACC_TARGET_PARALLEL_CLAUSE(is_device_ptr)

// Clauses allowed for OpenACC directive 'target parallel for'.
OPENACC_TARGET_PARALLEL_FOR_CLAUSE(if)
OPENACC_TARGET_PARALLEL_FOR_CLAUSE(device)
OPENACC_TARGET_PARALLEL_FOR_CLAUSE(map)
OPENACC_TARGET_PARALLEL_FOR_CLAUSE(private)
OPENACC_TARGET_PARALLEL_FOR_CLAUSE(firstprivate)
OPENACC_TARGET_PARALLEL_FOR_CLAUSE(lastprivate)
OPENACC_TARGET_PARALLEL_FOR_CLAUSE(nowait)
OPENACC_TARGET_PARALLEL_FOR_CLAUSE(depend)
OPENACC_TARGET_PARALLEL_FOR_CLAUSE(defaultmap)
OPENACC_TARGET_PARALLEL_FOR_CLAUSE(num_threads)
OPENACC_TARGET_PARALLEL_FOR_CLAUSE(default)
OPENACC_TARGET_PARALLEL_FOR_CLAUSE(proc_bind)
OPENACC_TARGET_PARALLEL_FOR_CLAUSE(shared)
OPENACC_TARGET_PARALLEL_FOR_CLAUSE(reduction)
OPENACC_TARGET_PARALLEL_FOR_CLAUSE(collapse)
OPENACC_TARGET_PARALLEL_FOR_CLAUSE(schedule)
OPENACC_TARGET_PARALLEL_FOR_CLAUSE(ordered)
OPENACC_TARGET_PARALLEL_FOR_CLAUSE(linear)
OPENACC_TARGET_PARALLEL_FOR_CLAUSE(is_device_ptr)

// Clauses allowed for OpenACC directive 'target update'.
OPENACC_TARGET_UPDATE_CLAUSE(if)
OPENACC_TARGET_UPDATE_CLAUSE(device)
OPENACC_TARGET_UPDATE_CLAUSE(to)
OPENACC_TARGET_UPDATE_CLAUSE(from)
OPENACC_TARGET_UPDATE_CLAUSE(nowait)
OPENACC_TARGET_UPDATE_CLAUSE(depend)

// Clauses allowed for OpenACC directive 'teams'.
OPENACC_TEAMS_CLAUSE(default)
OPENACC_TEAMS_CLAUSE(private)
OPENACC_TEAMS_CLAUSE(firstprivate)
OPENACC_TEAMS_CLAUSE(shared)
OPENACC_TEAMS_CLAUSE(reduction)
OPENACC_TEAMS_CLAUSE(num_teams)
OPENACC_TEAMS_CLAUSE(thread_limit)

// Clauses allowed for OpenACC directive 'ordered'.
OPENACC_ORDERED_CLAUSE(threads)
OPENACC_ORDERED_CLAUSE(simd)
OPENACC_ORDERED_CLAUSE(depend)

// Map types and map type modifier for 'map' clause.
OPENACC_MAP_KIND(alloc)
OPENACC_MAP_KIND(to)
OPENACC_MAP_KIND(from)
OPENACC_MAP_KIND(tofrom)
OPENACC_MAP_KIND(delete)
OPENACC_MAP_KIND(release)
OPENACC_MAP_KIND(always)

// Clauses allowed for OpenACC directive 'taskloop'.
OPENACC_TASKLOOP_CLAUSE(if)
OPENACC_TASKLOOP_CLAUSE(shared)
OPENACC_TASKLOOP_CLAUSE(private)
OPENACC_TASKLOOP_CLAUSE(firstprivate)
OPENACC_TASKLOOP_CLAUSE(lastprivate)
OPENACC_TASKLOOP_CLAUSE(default)
OPENACC_TASKLOOP_CLAUSE(collapse)
OPENACC_TASKLOOP_CLAUSE(final)
OPENACC_TASKLOOP_CLAUSE(untied)
OPENACC_TASKLOOP_CLAUSE(mergeable)
OPENACC_TASKLOOP_CLAUSE(priority)
OPENACC_TASKLOOP_CLAUSE(grainsize)
OPENACC_TASKLOOP_CLAUSE(nogroup)
OPENACC_TASKLOOP_CLAUSE(num_tasks)
OPENACC_TASKLOOP_CLAUSE(reduction)
OPENACC_TASKLOOP_CLAUSE(in_reduction)

// Clauses allowed for OpenACC directive 'taskloop simd'.
OPENACC_TASKLOOP_SIMD_CLAUSE(if)
OPENACC_TASKLOOP_SIMD_CLAUSE(shared)
OPENACC_TASKLOOP_SIMD_CLAUSE(private)
OPENACC_TASKLOOP_SIMD_CLAUSE(firstprivate)
OPENACC_TASKLOOP_SIMD_CLAUSE(lastprivate)
OPENACC_TASKLOOP_SIMD_CLAUSE(default)
OPENACC_TASKLOOP_SIMD_CLAUSE(collapse)
OPENACC_TASKLOOP_SIMD_CLAUSE(final)
OPENACC_TASKLOOP_SIMD_CLAUSE(untied)
OPENACC_TASKLOOP_SIMD_CLAUSE(mergeable)
OPENACC_TASKLOOP_SIMD_CLAUSE(priority)
OPENACC_TASKLOOP_SIMD_CLAUSE(linear)
OPENACC_TASKLOOP_SIMD_CLAUSE(aligned)
OPENACC_TASKLOOP_SIMD_CLAUSE(safelen)
OPENACC_TASKLOOP_SIMD_CLAUSE(simdlen)
OPENACC_TASKLOOP_SIMD_CLAUSE(grainsize)
OPENACC_TASKLOOP_SIMD_CLAUSE(nogroup)
OPENACC_TASKLOOP_SIMD_CLAUSE(num_tasks)
OPENACC_TASKLOOP_SIMD_CLAUSE(reduction)
OPENACC_TASKLOOP_SIMD_CLAUSE(in_reduction)

// Clauses allowed for OpenACC directive 'critical'.
OPENACC_CRITICAL_CLAUSE(hint)

// Clauses allowed for OpenACC directive 'distribute'
OPENACC_DISTRIBUTE_CLAUSE(private)
OPENACC_DISTRIBUTE_CLAUSE(firstprivate)
OPENACC_DISTRIBUTE_CLAUSE(lastprivate)
OPENACC_DISTRIBUTE_CLAUSE(collapse)
OPENACC_DISTRIBUTE_CLAUSE(dist_schedule)

// Static attributes for 'dist_schedule' clause.
OPENACC_DIST_SCHEDULE_KIND(static)

// Clauses allowed for OpenACC directive 'distribute parallel for'
OPENACC_DISTRIBUTE_PARALLEL_FOR_CLAUSE(firstprivate)
OPENACC_DISTRIBUTE_PARALLEL_FOR_CLAUSE(lastprivate)
OPENACC_DISTRIBUTE_PARALLEL_FOR_CLAUSE(collapse)
OPENACC_DISTRIBUTE_PARALLEL_FOR_CLAUSE(dist_schedule)
OPENACC_DISTRIBUTE_PARALLEL_FOR_CLAUSE(if)
OPENACC_DISTRIBUTE_PARALLEL_FOR_CLAUSE(num_threads)
OPENACC_DISTRIBUTE_PARALLEL_FOR_CLAUSE(default)
OPENACC_DISTRIBUTE_PARALLEL_FOR_CLAUSE(proc_bind)
OPENACC_DISTRIBUTE_PARALLEL_FOR_CLAUSE(private)
OPENACC_DISTRIBUTE_PARALLEL_FOR_CLAUSE(shared)
OPENACC_DISTRIBUTE_PARALLEL_FOR_CLAUSE(reduction)
OPENACC_DISTRIBUTE_PARALLEL_FOR_CLAUSE(copyin)
OPENACC_DISTRIBUTE_PARALLEL_FOR_CLAUSE(schedule)

// Clauses allowed for OpenACC directive 'distribute parallel for simd'
OPENACC_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(firstprivate)
OPENACC_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(lastprivate)
OPENACC_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(collapse)
OPENACC_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(dist_schedule)
OPENACC_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(if)
OPENACC_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(num_threads)
OPENACC_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(default)
OPENACC_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(proc_bind)
OPENACC_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(private)
OPENACC_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(shared)
OPENACC_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(reduction)
OPENACC_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(copyin)
OPENACC_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(schedule)
OPENACC_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(linear)
OPENACC_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(aligned)
OPENACC_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(safelen)
OPENACC_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(simdlen)

// Clauses allowed for OpenACC directive 'distribute simd'
// PATH=/opt/clang-ykt/llvm-lsc/install/bin:$PATH
OPENACC_DISTRIBUTE_SIMD_CLAUSE(private)
OPENACC_DISTRIBUTE_SIMD_CLAUSE(firstprivate)
OPENACC_DISTRIBUTE_SIMD_CLAUSE(lastprivate)
OPENACC_DISTRIBUTE_SIMD_CLAUSE(collapse)
OPENACC_DISTRIBUTE_SIMD_CLAUSE(dist_schedule)
OPENACC_DISTRIBUTE_SIMD_CLAUSE(linear)
OPENACC_DISTRIBUTE_SIMD_CLAUSE(aligned)
OPENACC_DISTRIBUTE_SIMD_CLAUSE(safelen)
OPENACC_DISTRIBUTE_SIMD_CLAUSE(simdlen)
OPENACC_DISTRIBUTE_SIMD_CLAUSE(reduction)

// Clauses allowed for OpenACC directive 'target parallel for simd'.
OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(if)
OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(device)
OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(map)
OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(private)
OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(firstprivate)
OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(lastprivate)
OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(nowait)
OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(depend)
OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(defaultmap)
OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(num_threads)
OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(default)
OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(proc_bind)
OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(shared)
OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(reduction)
OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(collapse)
OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(schedule)
OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(ordered)
OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(linear)
OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(safelen)
OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(simdlen)
OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(aligned)
OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE(is_device_ptr)

// Clauses allowed for OpenACC directive 'target simd'.
OPENACC_TARGET_SIMD_CLAUSE(if)
OPENACC_TARGET_SIMD_CLAUSE(device)
OPENACC_TARGET_SIMD_CLAUSE(map)
OPENACC_TARGET_SIMD_CLAUSE(private)
OPENACC_TARGET_SIMD_CLAUSE(nowait)
OPENACC_TARGET_SIMD_CLAUSE(depend)
OPENACC_TARGET_SIMD_CLAUSE(defaultmap)
OPENACC_TARGET_SIMD_CLAUSE(firstprivate)
OPENACC_TARGET_SIMD_CLAUSE(is_device_ptr)
OPENACC_TARGET_SIMD_CLAUSE(lastprivate)
OPENACC_TARGET_SIMD_CLAUSE(linear)
OPENACC_TARGET_SIMD_CLAUSE(aligned)
OPENACC_TARGET_SIMD_CLAUSE(safelen)
OPENACC_TARGET_SIMD_CLAUSE(simdlen)
OPENACC_TARGET_SIMD_CLAUSE(collapse)
OPENACC_TARGET_SIMD_CLAUSE(reduction)

// Clauses allowed for OpenACC directive 'teams distribute'.
OPENACC_TEAMS_DISTRIBUTE_CLAUSE(default)
OPENACC_TEAMS_DISTRIBUTE_CLAUSE(private)
OPENACC_TEAMS_DISTRIBUTE_CLAUSE(firstprivate)
OPENACC_TEAMS_DISTRIBUTE_CLAUSE(shared)
OPENACC_TEAMS_DISTRIBUTE_CLAUSE(reduction)
OPENACC_TEAMS_DISTRIBUTE_CLAUSE(num_teams)
OPENACC_TEAMS_DISTRIBUTE_CLAUSE(thread_limit)
OPENACC_TEAMS_DISTRIBUTE_CLAUSE(lastprivate)
OPENACC_TEAMS_DISTRIBUTE_CLAUSE(collapse)
OPENACC_TEAMS_DISTRIBUTE_CLAUSE(dist_schedule)

// Clauses allowed for OpenACC directive 'teams distribute simd'
OPENACC_TEAMS_DISTRIBUTE_SIMD_CLAUSE(default)
OPENACC_TEAMS_DISTRIBUTE_SIMD_CLAUSE(private)
OPENACC_TEAMS_DISTRIBUTE_SIMD_CLAUSE(firstprivate)
OPENACC_TEAMS_DISTRIBUTE_SIMD_CLAUSE(shared)
OPENACC_TEAMS_DISTRIBUTE_SIMD_CLAUSE(reduction)
OPENACC_TEAMS_DISTRIBUTE_SIMD_CLAUSE(num_teams)
OPENACC_TEAMS_DISTRIBUTE_SIMD_CLAUSE(thread_limit)
OPENACC_TEAMS_DISTRIBUTE_SIMD_CLAUSE(lastprivate)
OPENACC_TEAMS_DISTRIBUTE_SIMD_CLAUSE(collapse)
OPENACC_TEAMS_DISTRIBUTE_SIMD_CLAUSE(dist_schedule)
OPENACC_TEAMS_DISTRIBUTE_SIMD_CLAUSE(linear)
OPENACC_TEAMS_DISTRIBUTE_SIMD_CLAUSE(aligned)
OPENACC_TEAMS_DISTRIBUTE_SIMD_CLAUSE(safelen)
OPENACC_TEAMS_DISTRIBUTE_SIMD_CLAUSE(simdlen)

// Clauses allowed for OpenACC directive 'teams distribute parallel for simd'
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(firstprivate)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(lastprivate)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(collapse)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(dist_schedule)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(if)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(num_threads)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(default)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(proc_bind)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(private)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(shared)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(reduction)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(schedule)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(linear)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(aligned)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(safelen)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(simdlen)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(num_teams)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(thread_limit)

// Clauses allowed for OpenACC directive 'teams distribute parallel for'
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(firstprivate)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(lastprivate)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(collapse)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(dist_schedule)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(if)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(num_threads)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(default)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(proc_bind)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(private)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(shared)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(reduction)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(schedule)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(num_teams)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(thread_limit)
OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(copyin)

// Clauses allowed for OpenACC directive 'target teams'.
OPENACC_TARGET_TEAMS_CLAUSE(if)
OPENACC_TARGET_TEAMS_CLAUSE(device)
OPENACC_TARGET_TEAMS_CLAUSE(map)
OPENACC_TARGET_TEAMS_CLAUSE(private)
OPENACC_TARGET_TEAMS_CLAUSE(nowait)
OPENACC_TARGET_TEAMS_CLAUSE(depend)
OPENACC_TARGET_TEAMS_CLAUSE(defaultmap)
OPENACC_TARGET_TEAMS_CLAUSE(firstprivate)
OPENACC_TARGET_TEAMS_CLAUSE(is_device_ptr)
OPENACC_TARGET_TEAMS_CLAUSE(default)
OPENACC_TARGET_TEAMS_CLAUSE(shared)
OPENACC_TARGET_TEAMS_CLAUSE(reduction)
OPENACC_TARGET_TEAMS_CLAUSE(num_teams)
OPENACC_TARGET_TEAMS_CLAUSE(thread_limit)

// Clauses allowed for OpenACC directive 'target teams distribute'.
OPENACC_TARGET_TEAMS_DISTRIBUTE_CLAUSE(if)
OPENACC_TARGET_TEAMS_DISTRIBUTE_CLAUSE(device)
OPENACC_TARGET_TEAMS_DISTRIBUTE_CLAUSE(map)
OPENACC_TARGET_TEAMS_DISTRIBUTE_CLAUSE(private)
OPENACC_TARGET_TEAMS_DISTRIBUTE_CLAUSE(nowait)
OPENACC_TARGET_TEAMS_DISTRIBUTE_CLAUSE(depend)
OPENACC_TARGET_TEAMS_DISTRIBUTE_CLAUSE(defaultmap)
OPENACC_TARGET_TEAMS_DISTRIBUTE_CLAUSE(firstprivate)
OPENACC_TARGET_TEAMS_DISTRIBUTE_CLAUSE(is_device_ptr)
OPENACC_TARGET_TEAMS_DISTRIBUTE_CLAUSE(default)
OPENACC_TARGET_TEAMS_DISTRIBUTE_CLAUSE(shared)
OPENACC_TARGET_TEAMS_DISTRIBUTE_CLAUSE(reduction)
OPENACC_TARGET_TEAMS_DISTRIBUTE_CLAUSE(num_teams)
OPENACC_TARGET_TEAMS_DISTRIBUTE_CLAUSE(thread_limit)
OPENACC_TARGET_TEAMS_DISTRIBUTE_CLAUSE(lastprivate)
OPENACC_TARGET_TEAMS_DISTRIBUTE_CLAUSE(collapse)
OPENACC_TARGET_TEAMS_DISTRIBUTE_CLAUSE(dist_schedule)

// Clauses allowed for OpenACC directive 'target teams distribute parallel for'.
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(if)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(device)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(map)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(private)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(nowait)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(depend)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(defaultmap)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(firstprivate)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(is_device_ptr)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(default)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(shared)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(reduction)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(num_teams)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(thread_limit)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(lastprivate)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(collapse)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(dist_schedule)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(num_threads)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(proc_bind)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE(schedule)

// Clauses allowed for OpenACC directive
// 'target teams distribute parallel for simd'.
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(if)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(device)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(map)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(private)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(nowait)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(depend)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(defaultmap)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(firstprivate)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(is_device_ptr)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(default)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(shared)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(reduction)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(num_teams)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(thread_limit)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(lastprivate)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(collapse)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(dist_schedule)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(num_threads)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(proc_bind)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(schedule)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(linear)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(aligned)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(safelen)
OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE(simdlen)

// Clauses allowed for OpenACC directive 'target teams distribute simd'.
OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE(if)
OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE(device)
OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE(map)
OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE(private)
OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE(nowait)
OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE(depend)
OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE(defaultmap)
OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE(firstprivate)
OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE(lastprivate)
OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE(is_device_ptr)
OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE(shared)
OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE(reduction)
OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE(num_teams)
OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE(thread_limit)
OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE(collapse)
OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE(dist_schedule)
OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE(linear)
OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE(aligned)
OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE(safelen)
OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE(simdlen)

// Clauses allowed for OpenACC directive 'taskgroup'.
OPENACC_TASKGROUP_CLAUSE(task_reduction)

#undef OPENACC_TASKGROUP_CLAUSE
#undef OPENACC_TASKLOOP_SIMD_CLAUSE
#undef OPENACC_TASKLOOP_CLAUSE
#undef OPENACC_LINEAR_KIND
#undef OPENACC_DEPEND_KIND
#undef OPENACC_SCHEDULE_MODIFIER
#undef OPENACC_SCHEDULE_KIND
#undef OPENACC_PROC_BIND_KIND
#undef OPENACC_DEFAULT_KIND
#undef OPENACC_DIRECTIVE
#undef OPENACC_DIRECTIVE_EXT
#undef OPENACC_CLAUSE
#undef OPENACC_CRITICAL_CLAUSE
#undef OPENACC_ORDERED_CLAUSE
#undef OPENACC_CANCEL_CLAUSE
#undef OPENACC_SINGLE_CLAUSE
#undef OPENACC_SECTIONS_CLAUSE
#undef OPENACC_PARALLEL_CLAUSE
#undef OPENACC_PARALLEL_FOR_CLAUSE
#undef OPENACC_PARALLEL_FOR_SIMD_CLAUSE
#undef OPENACC_PARALLEL_SECTIONS_CLAUSE
#undef OPENACC_TASK_CLAUSE
#undef OPENACC_ATOMIC_CLAUSE
#undef OPENACC_TARGET_CLAUSE
#undef OPENACC_TARGET_DATA_CLAUSE
#undef OPENACC_TARGET_ENTER_DATA_CLAUSE
#undef OPENACC_TARGET_EXIT_DATA_CLAUSE
#undef OPENACC_TARGET_PARALLEL_CLAUSE
#undef OPENACC_TARGET_PARALLEL_FOR_CLAUSE
#undef OPENACC_TEAMS_CLAUSE
#undef OPENACC_SIMD_CLAUSE
#undef OPENACC_FOR_CLAUSE
#undef OPENACC_FOR_SIMD_CLAUSE
#undef OPENACC_MAP_KIND
#undef OPENACC_DISTRIBUTE_CLAUSE
#undef OPENACC_DIST_SCHEDULE_KIND
#undef OPENACC_DEFAULTMAP_KIND
#undef OPENACC_DEFAULTMAP_MODIFIER
#undef OPENACC_TARGET_UPDATE_CLAUSE
#undef OPENACC_DISTRIBUTE_PARALLEL_FOR_CLAUSE
#undef OPENACC_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE
#undef OPENACC_DISTRIBUTE_SIMD_CLAUSE
#undef OPENACC_TARGET_PARALLEL_FOR_SIMD_CLAUSE
#undef OPENACC_TARGET_SIMD_CLAUSE
#undef OPENACC_TEAMS_DISTRIBUTE_CLAUSE
#undef OPENACC_TEAMS_DISTRIBUTE_SIMD_CLAUSE
#undef OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE
#undef OPENACC_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE
#undef OPENACC_TARGET_TEAMS_CLAUSE
#undef OPENACC_TARGET_TEAMS_DISTRIBUTE_CLAUSE
#undef OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_CLAUSE
#undef OPENACC_TARGET_TEAMS_DISTRIBUTE_PARALLEL_FOR_SIMD_CLAUSE
#undef OPENACC_TARGET_TEAMS_DISTRIBUTE_SIMD_CLAUSE
